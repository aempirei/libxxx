document        := statement* !eof
statement       := !ws command !eol
command         := comment / typedef / funcdef / funcdecl
typedef         := name !_? !tilde !_? type
funcdef         := name !_? !larrow !_? func
funcdecl        := name !_? !colon !_? type
type            := signature / name
name            := ^token !dash ^name / ^token
token           := circumfix / symbol
circumfix       := cf_sq / cf_cu / cf_an / cf_fs / cf_bs
cf_sq           := !lsquare name !rsquare
cf_cu           := !lcurly name !rcurly
cf_an           := !langle name !rangle
cf_fs           := !fs name !fs
cf_bs           := !bs name !bs
fullname        := name !_ ^fullname / name
signature       := fullname !_? !rarrow !_? name
reference       := !at number?
func            := expr !_? !comma !_? ^func / expr
expr            := call !_? !pipe !_? ^expr / call
call            := name !_ parameters / name
parameters      := parameter !_ ^parameters / parameter
parameter       := name / literal / reference / integer
literal         := literal1 / literal2
integer         := number / hex / oct / dec / bin

ws              ~= /\s*/
_               ~= /[ \t]+/
colon           ~= /:/
eol             ~= /\s*($|\z)/
eof             ~= /\z/
comment         ~= /#[^\n]*/
symbol          ~= /[[:alpha:]][[:alnum:]]*/
tilde           ~= /\~/
larrow          ~= /<-/
rarrow          ~= /->/
literal1        ~= /"(\\\\|\\"|[^"])*"/
literal2        ~= /\((\\\\|\\\)|[^)])*\)/
number          ~= /[-+]?(0|[1-9]\d*)\b/
hex             ~= /0[xX][[:xdigit:]]+\b/
oct             ~= /0[oO][0-7]+\b/
dec             ~= /0[dD]\d+\b/
bin             ~= /0[bB][01]+\b/
fs              ~= /\//
bs              ~= /\\/
lsquare         ~= /\[/
rsquare         ~= /\]/
lcurly          ~= /\{/
rcurly          ~= /\}/
langle          ~= /</
rangle          ~= />/
pipe            ~= /\|/
at              ~= /@/
dash            ~= /-/
comma           ~= /,/
