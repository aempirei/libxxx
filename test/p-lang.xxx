document        = statements !eof
statements      = !ws statement !eol statements?
statement       = comment / typedef / funcdef / funcdecl
typedef         = name !_? !tilde !_? type
funcdef         = name !_? !larrow !_? func
funcdecl        = name !_? !colon !_? type
type            = signature / name
name            = token !dash name / token
token           = circumfix / symbol
circumfix       = cf_sq / cf_cu / cf_an / cf_fs / cf_bs
cf_sq           = !lsquare name !rsquare
cf_cu           = !lcurly name !rcurly
cf_an           = !langle name !rangle
cf_fs           = !fs name !fs
cf_bs           = !bs name !bs
fullname        = name !_ fullname / name
signature       = fullname !_? !rarrow !_? name
reference       = !at number?
func            = expr !_? !comma !_? func / expr
expr            = call !_? !pipe !_? expr / call
call            = name !_ parameters / name
parameters      = parameter !_ parameters / parameter
parameter       = name / literal / reference / integer
literal         = literal1 / literal2
integer         = number / hex / oct / dec / bin
ws              = /\A\s*/
_               = /\A[ \t]+/
colon           = /\A:/
eol             = /\A[ \t]*($|\z)/
eof             = /\A\s*\z/
comment         = /\A#[^\n]*/
symbol          = /\A[[:alpha:]][[:alnum:]]*/
tilde           = /\A\~/
larrow          = /\A<-/
rarrow          = /\A->/
literal1        = /\A"(\\\\|\\"|[^"])*"/
literal2        = /\A\((\\\\|\\\)|[^)])*\)/
number          = /\A[-+]?(0|[1-9]\d*)\b/
hex             = /\A0[xX][[:xdigit:]]+\b/
oct             = /\A0[oO][0-7]+\b/
dec             = /\A0[dD]\d+\b/
bin             = /\A0[bB][01]+\b/
fs              = /\A\//
bs              = /\A\\/
lsquare         = /\A\[/
rsquare         = /\A\]/
lcurly          = /\A\{/
rcurly          = /\A\}/
langle          = /\A</
rangle          = /\A>/
pipe            = /\A\|/
at              = /\A@/
dash            = /\A-/
comma           = /\A,/
