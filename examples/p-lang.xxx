document        := statement* !eof
statement       := !ws command !eol
command         := comment / typedef / funcdef / funcdecl
typedef         := name !. !tilde !. type 
funcdef         := name !. !larrow !. func
funcdecl        := name !. !colon !. type
type            := signature / name
name            := ^token !- ^name / ^token
token           := circumfix / symbol
circumfix       := cf-sq / cf-cu / cf-an / cf-fs / cf-bs
cf-sq           := !lsquare name !rsquare
cf-cu           := !lcurly name !rcurly
cf-an           := !langle name !rangle
cf-fs           := !fs name !fs
cf-bs           := !bs name !bs
fullname        := name !_ ^fullname / name
signature       := fullname !. !rarrow !. name
reference       := !at number?
func            := expr !. !comma !. ^func / expr
expr            := call !. !pipe !. ^expr / call
call            := name !_ parameters / name
parameters      := parameter !_ ^parameters / parameter
parameter       := name / literal / reference / integer
literal         := literal1 / literal2
integer         := number / hex / oct / dec / bin

ws              ~= /\s*/
.               ~= /[ \t]*/
_               ~= /[ \t]+/
colon           ~= /:/
eol             ~= /\s*($|\z)/
eof             ~= /\z/
comment         ~= /#[^\n]*/
symbol          ~= /[[:alpha:]][[:alnum:]]*/
tilde           ~= /\~/
larrow          ~= /<-/
rarrow          ~= /->/
literal1        ~= /"(\\\\|\\"|[^"])*"/
literal2        ~= /\((\\\\|\\\)|[^)])*\)/
number          ~= /[-+]?(0|[1-9]\d*)\b/
hex             ~= /0[xX][[:xdigit:]]+\b/
oct             ~= /0[oO][0-7]+\b/
dec             ~= /0[dD]\d+\b/
bin             ~= /0[bB][01]+\b/
fs              ~= /\//
bs              ~= /\\/
lsquare         ~= /\[/
rsquare         ~= /\]/
lcurly          ~= /\{/
rcurly          ~= /\}/
langle          ~= /</
rangle          ~= />/
pipe            ~= /\|/
at              ~= /@/
-               ~= /-/
comma           ~= /,/
